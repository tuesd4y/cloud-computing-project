apiVersion: apps/v1
kind: Deployment
metadata:
  name: routing-service-berlin-car
  namespace: routing-service

spec:
  replicas: 1
  selector:
    matchLabels:
      routing-config: berlin-car
  template:
    metadata:
      labels:
        app: routing-server
        routing-config: berlin-car

    spec:
      containers:
      - name: routing-service-berlin-car
        image: tuesd4y/osrm-backend-eks:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
        env: 
        - name: OSRM_DATA_LABEL
          value: "berlin-new"
        - name: OSRM_MODE
          value: "LOAD"
        - name: OSRM_S3_BUCKET
          value: "s3://triply-routing-data"
          # todo-Chris -> we should use secrets for this instead of storing them in plain text, as outlined in https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables
        - name: OSRM_AWS_ACCESS_KEY_ID
          value: "ACCESS-KEY"
        - name: OSRM_AWS_SECRET_ACCESS_KEY
          value: "ACCESS/SECRET"
---
apiVersion: v1
kind: Service
metadata:
  name: routing-service-berlin-car-entrypoint
  namespace: routing-service
  labels:
    app: routing-server
    routing-config: berlin-car
  annotations: 
    source-url: "http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf"
    region: berlin-new
    mode: car
    time: "2022-01-08"
spec:
  type: ClusterIP
  selector:
    routing-config: berlin-car
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000